diff --git a/src/expr.c b/src/expr.c
index 8587f5ec7..225ee6737 100644
--- a/src/expr.c
+++ b/src/expr.c
@@ -5514,11 +5514,24 @@ static int impliesNotNullRow(Walker *pWalker, Expr *pExpr){
       testcase( pExpr->op==TK_GE );
       /* The y.pTab=0 assignment in wherecode.c always happens after the
       ** impliesNotNullRow() test */
+#ifdef MAGMA_ENABLE_FIXES
       if( (pLeft->op==TK_COLUMN && ALWAYS(pLeft->y.pTab!=0)
                                && IsVirtual(pLeft->y.pTab))
        || (pRight->op==TK_COLUMN && ALWAYS(pRight->y.pTab!=0)
                                && IsVirtual(pRight->y.pTab))
-      ){
+      )
+#else
+      // MAGMA_LOG("%MAGMA_BUG%", MAGMA_OR(MAGMA_AND(pLeft->op==TK_COLUMN, pLeft->y.pTab == 0),MAGMA_AND(pLeft->op!=TK_COLUMN,MAGMA_AND(pRight->op==TK_COLUMN, pRight->y.pTab == 0))));
+      assert(\
+             (pLeft->op==TK_COLUMN && pLeft->y.pTab == 0) || \
+             (pLeft->op!=TK_COLUMN && \
+             pRight->op==TK_COLUMN && pRight->y.pTab == 0));
+      
+      if( (pLeft->op==TK_COLUMN && IsVirtual(pLeft->y.pTab))
+       || (pRight->op==TK_COLUMN && IsVirtual(pRight->y.pTab))
+      )
+#endif
+      {
         return WRC_Prune;
       }
     }
diff --git a/src/sqliteInt.h b/src/sqliteInt.h
index 7a00b576a..9e7d21b7f 100644
--- a/src/sqliteInt.h
+++ b/src/sqliteInt.h
@@ -2153,9 +2153,20 @@ struct Table {
 */
 #ifndef SQLITE_OMIT_VIRTUALTABLE
 #  define IsVirtual(X)      ((X)->nModuleArg)
+#ifdef MAGMA_ENABLE_FIXES
 #  define ExprIsVtab(X)  \
               ((X)->op==TK_COLUMN && (X)->y.pTab!=0 && (X)->y.pTab->nModuleArg)
 #else
+//#  define ExprIsVtab(X)  \
+//      do {FILE *bug_file = fopen("./bug17", "a+"); \
+//      fprintf(bug_file, "bug17_2 is triggered %d %d \n", (X)->op==TK_COLUMN, (X)->y.pTab == 0); \
+//      fclose(bug_file); } while (0); \
+//             ((X)->op==TK_COLUMN && (X)->y.pTab->nModuleArg)
+
+#  define ExprIsVtab(X)  \
+                ((X)->op==TK_COLUMN && (X)->y.pTab==0)
+#endif
+#else
 #  define IsVirtual(X)      0
 #  define ExprIsVtab(X)     0
 #endif
